name: Fix pnpm dependency hash

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-$${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  fix-nix-hash:
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: "Checkout Repository"
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: "Get changed files"
        id: changed-files
        uses: dorny/paths-filter@v3
        with:
          filters: |
            files:
              - 'flake.nix'
              - 'package.json'
              - 'pnpm-lock.yaml'

      # Exit early if no relevant files are updated
      - uses: DeterminateSystems/nix-installer-action@main
        if: steps.changed-files.outputs.files == 'true'
        with:
          source-url: https://install.lix.systems/lix/lix-installer-x86_64-linux
          logger: pretty

      - name: "Update Dependency Hash"
        if: steps.changed-files.outputs.files == 'true'
        run: |
          if nix build --print-build-logs .#site 2> /tmp/log; then
            exit 0
          fi

          hash="$(grep 'got:' /tmp/log | awk '{print $2}')"

          if [ -n "$hash" ]; then
             echo "hash=$hash"
             echo "Updating hash in package.nix"
             sed -e "s#hash =.*\$#hash = \"$hash\";#g" -i nix/site.nix
           else
             echo "No hash found, exiting"
             exit 0 # exit with success, this is not error worthy
           fi

          git diff

      - name: "Update dependencies"
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "meta: auto-update dependencies"
  cachix:
    needs: fix-nix-hash
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        name: Checkout

      - name: Install Lix
        uses: DeterminateSystems/nix-installer-action@main
        with:
          source-url: https://install.lix.systems/lix/lix-installer-x86_64-linux
          logger: pretty

      - uses: cachix/cachix-action@v16
        with:
          name: nyx
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"

      - name: Build neovim-flake with default settings
        run: nix build .#site -Lv

---
import { faArrowRight } from "@fortawesome/free-solid-svg-icons";
import { FontAwesomeIcon } from "@fortawesome/react-fontawesome";
import { getCollection } from "astro:content";
import type { ProjectEntry } from "../lib/types";

interface Props {
  mode: "featured" | "recent";
  title: string;
}

const { mode, title } = Astro.props;
const MAX_TAGS_TO_SHOW = 3;

// Get all projects
const allProjects = (await getCollection("projects")) as ProjectEntry[];
const activeProjects = allProjects.filter((project) => project.data.active);
const inactiveProjects = allProjects.filter((project) => !project.data.active);

// Select projects based on mode
let displayProjects: ProjectEntry[] = [];

if (mode === "featured") {
  // For featured mode: Get up to 3 projects (prioritize active ones)
  const shuffledActive = [...activeProjects].sort(() => 0.5 - Math.random());
  const neededInactive = Math.max(0, 3 - shuffledActive.length);

  displayProjects = [
    ...shuffledActive,
    ...inactiveProjects
      .sort(() => 0.5 - Math.random())
      .slice(0, neededInactive),
  ].slice(0, 3);
} else {
  // For recent mode: Get 5 most recent active projects
  displayProjects = activeProjects
    .sort((a, b) => {
      const dateA = a.data.startDate?.getTime() || 0;
      const dateB = b.data.startDate?.getTime() || 0;
      return dateB - dateA;
    })
    .slice(0, 5);
}

// Split projects for the recent mode layout
const topRowProjects = displayProjects.slice(0, 3);
const bottomRowProjects = displayProjects.slice(3);

// Format project date
const formatDate = (date?: Date) => {
  if (!date) return "Date Unknown";
  return date.toLocaleDateString("en-US", { year: "numeric", month: "short" });
};
---

<section id="projects-display" class="projects-display fade-in">
  <h2 class="section-title">{title}</h2>

  {
    mode === "recent" ? (
      <div class="recent-projects-container">
        <div class="top-row">
          {topRowProjects.map((project) => (
            <div
              class={`project-card ${!project.data.active ? "inactive" : ""}`}
            >
              <div class="project-content">
                <h3 class="project-title">
                  <a
                    href={project.data.sourceUrl}
                    target="_blank"
                    rel="noopener noreferrer"
                  >
                    {project.data.title}
                  </a>
                </h3>

                <div class="project-meta">
                  <span class="project-date">
                    {formatDate(project.data.startDate)}
                  </span>
                  <span
                    class={`status-badge ${project.data.active ? "active" : "inactive"}`}
                  >
                    {project.data.active ? "Active" : "Inactive"}
                  </span>
                </div>

                {project.data.description && (
                  <div class="description-container">
                    <p class="project-description">
                      {project.data.description}
                    </p>
                  </div>
                )}

                <div class="project-tags">
                  {project.data.tags.slice(0, MAX_TAGS_TO_SHOW).map((tag) => (
                    <span class="project-tag">{tag}</span>
                  ))}
                  {project.data.tags.length > MAX_TAGS_TO_SHOW && (
                    <span class="project-tag more">
                      +{project.data.tags.length - MAX_TAGS_TO_SHOW}
                    </span>
                  )}
                </div>

                <a
                  href={project.data.sourceUrl}
                  class="view-project"
                  target="_blank"
                  rel="noopener noreferrer"
                >
                  View Project{" "}
                  <FontAwesomeIcon icon={faArrowRight} className="arrow-icon" />
                </a>
              </div>
            </div>
          ))}
        </div>

        <div class="bottom-row">
          {bottomRowProjects.map((project) => (
            <div
              class={`project-card ${!project.data.active ? "inactive" : ""}`}
            >
              <div class="project-content">
                <h3 class="project-title">
                  <a
                    href={project.data.sourceUrl}
                    target="_blank"
                    rel="noopener noreferrer"
                  >
                    {project.data.title}
                  </a>
                </h3>

                <div class="project-meta">
                  <span class="project-date">
                    {formatDate(project.data.startDate)}
                  </span>
                  <span
                    class={`status-badge ${project.data.active ? "active" : "inactive"}`}
                  >
                    {project.data.active ? "Active" : "Inactive"}
                  </span>
                </div>

                {project.data.description && (
                  <div class="description-container">
                    <p class="project-description">
                      {project.data.description}
                    </p>
                  </div>
                )}

                <div class="project-tags">
                  {project.data.tags.slice(0, MAX_TAGS_TO_SHOW).map((tag) => (
                    <span class="project-tag">{tag}</span>
                  ))}
                  {project.data.tags.length > MAX_TAGS_TO_SHOW && (
                    <span class="project-tag more">
                      +{project.data.tags.length - MAX_TAGS_TO_SHOW}
                    </span>
                  )}
                </div>

                <a
                  href={project.data.sourceUrl}
                  class="view-project"
                  target="_blank"
                  rel="noopener noreferrer"
                >
                  View Project{" "}
                  <FontAwesomeIcon icon={faArrowRight} className="arrow-icon" />
                </a>
              </div>
            </div>
          ))}
        </div>
      </div>
    ) : (
      <div class="projects-grid">
        {displayProjects.map((project) => (
          <div class={`project-card ${!project.data.active ? "inactive" : ""}`}>
            <div class="project-content">
              <h3 class="project-title">
                <a
                  href={project.data.sourceUrl}
                  target="_blank"
                  rel="noopener noreferrer"
                >
                  {project.data.title}
                </a>
              </h3>

              <div class="project-meta">
                <span class="project-date">
                  {formatDate(project.data.startDate)}
                </span>
                <span
                  class={`status-badge ${project.data.active ? "active" : "inactive"}`}
                >
                  {project.data.active ? "Active" : "Inactive"}
                </span>
              </div>

              {project.data.description && (
                <div class="description-container">
                  <p class="project-description">{project.data.description}</p>
                </div>
              )}

              <div class="project-tags">
                {project.data.tags.slice(0, MAX_TAGS_TO_SHOW).map((tag) => (
                  <span class="project-tag">{tag}</span>
                ))}
                {project.data.tags.length > MAX_TAGS_TO_SHOW && (
                  <span class="project-tag more">
                    +{project.data.tags.length - MAX_TAGS_TO_SHOW}
                  </span>
                )}
              </div>

              <a
                href={project.data.sourceUrl}
                class="view-project"
                target="_blank"
                rel="noopener noreferrer"
              >
                View Project{" "}
                <FontAwesomeIcon icon={faArrowRight} className="arrow-icon" />
              </a>
            </div>
          </div>
        ))}
      </div>
    )
  }

  <div class="see-all">
    <a href="/projects" class="see-all-link">
      View all projects <FontAwesomeIcon
        icon={faArrowRight}
        className="arrow-icon"
      />
    </a>
  </div>
</section>

<style lang="scss">
  @use "sass:color";
  @use "../styles/global" as *;

  .projects-display {
    margin: 3rem auto;
    width: 100%;
    max-width: 1200px;
    padding: 0 1rem;
  }

  .section-title {
    text-align: center;
    margin-bottom: 1.5rem;
    font-size: 1.5rem;
    position: relative;
    display: inline-block;
    left: 50%;
    transform: translateX(-50%);

    &::after {
      content: "";
      position: absolute;
      bottom: -8px;
      left: 0;
      width: 60%;
      height: 2px;
      background: linear-gradient(
        to right,
        rgba(255, 255, 255, 0.05),
        rgba(255, 255, 255, 0.2),
        rgba(255, 255, 255, 0.05)
      );
    }
  }

  .recent-projects-container {
    display: flex;
    flex-direction: column;
    gap: 1.25rem;
    margin-bottom: 1.5rem;

    .top-row {
      display: grid;
      grid-template-columns: repeat(3, 1fr);
      gap: 1.25rem;
    }

    .bottom-row {
      display: flex;
      justify-content: center;
      gap: 1.25rem;

      .project-card {
        flex-basis: calc(33.333% - 0.85rem);
        max-width: calc(33.333% - 0.85rem);
      }
    }

    @media (max-width: 1024px) {
      .top-row {
        grid-template-columns: repeat(2, 1fr);
      }

      .bottom-row {
        flex-wrap: wrap;

        .project-card {
          flex-basis: calc(50% - 0.625rem);
          max-width: calc(50% - 0.625rem);
        }
      }
    }

    @media (max-width: 640px) {
      .top-row {
        grid-template-columns: 1fr;
      }

      .bottom-row {
        .project-card {
          flex-basis: 100%;
          max-width: 100%;
        }
      }
    }
  }

  .projects-grid {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 1.25rem;
    margin-bottom: 1.5rem;

    @media (max-width: 1024px) {
      grid-template-columns: repeat(2, 1fr);
    }

    @media (max-width: 640px) {
      grid-template-columns: 1fr;
    }
  }

  .project-card {
    background-color: scale-color($primary, $lightness: 6%);
    border-radius: 8px;
    overflow: hidden;
    transition: all 0.3s ease;
    border: 1px solid scale-color($primary, $lightness: -1%);
    height: 100%;
    display: flex;
    flex-direction: column;
    width: 100%;

    &:hover {
      transform: translateY(-4px);
      background-color: scale-color($primary, $lightness: 9%);
      box-shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.1);
    }

    &.inactive {
      opacity: 0.7;

      &:hover {
        opacity: 0.9;
      }
    }
  }

  .project-content {
    padding: 1.25rem;
    display: flex;
    flex-direction: column;
    height: 100%;
  }

  .project-title {
    font-size: 1.1rem;
    margin-bottom: 0.5rem;
    line-height: 1.4;

    a {
      color: $secondary;
      text-decoration: none;
      transition: color 0.2s ease;

      &:hover {
        color: scale-color($primary, $lightness: 40%);
      }
    }
  }

  .project-meta {
    display: flex;
    align-items: center;
    margin-bottom: 0.75rem;
    font-size: 0.8rem;
    gap: 0.75rem;
  }

  .project-date {
    color: scale-color($secondary, $lightness: -15%);
  }

  .status-badge {
    padding: 0.25rem 0.5rem;
    border-radius: 4px;
    font-size: 0.7rem;
    font-weight: 500;

    &.active {
      background-color: scale-color($primary, $lightness: 10%);
      color: $secondary;
    }

    &.inactive {
      background-color: scale-color($primary, $lightness: -2%);
      color: scale-color($secondary, $lightness: -15%);
    }
  }

  .description-container {
    flex-grow: 1;
    display: flex;
    flex-direction: column;
  }

  .project-description {
    margin-bottom: 0.75rem;
    font-size: 0.9rem;
    color: scale-color($secondary, $lightness: -8%);
    line-height: 1.5;
    overflow: hidden;
    text-overflow: ellipsis;
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
  }

  .project-tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    margin-bottom: 0.75rem;
  }

  .project-tag {
    background-color: scale-color($primary, $lightness: 4%);
    color: scale-color($secondary, $lightness: -5%);
    padding: 0.2rem 0.5rem;
    border-radius: 4px;
    font-size: 0.7rem;

    &.more {
      background-color: scale-color($primary, $lightness: 2%);
      font-size: 0.65rem;
    }
  }

  .view-project {
    margin-top: auto;
    color: $secondary;
    text-decoration: none;
    font-weight: 600;
    font-size: 0.85rem;
    transition: color 0.2s ease;
    align-self: flex-start;
    display: inline-flex;
    align-items: center;
    gap: 0.3rem;

    &:hover {
      color: scale-color($secondary, $lightness: 20%);

      .arrow-icon {
        transform: translateX(4px);
      }
    }

    .arrow-icon {
      transition: transform 0.2s ease;
    }
  }

  .see-all {
    text-align: center;
    margin-top: 1rem;
  }

  .see-all-link {
    display: inline-flex;
    align-items: center;
    color: $secondary;
    text-decoration: none;
    font-size: 0.9rem;
    font-weight: 600;
    padding: 0.5rem 1rem;
    border-radius: 4px;
    background-color: scale-color($primary, $lightness: 8%);
    transition: all 0.2s ease;

    .arrow-icon {
      margin-left: 0.3rem;
      transition: transform 0.2s ease;
    }

    &:hover {
      background-color: scale-color($primary, $lightness: 12%);
      transform: translateY(-2px);
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);

      .arrow-icon {
        transform: translateX(4px);
      }
    }
  }

  :global(.arrow-icon) {
    font-size: 1.1em;
    width: 0.9em;
    height: 0.9em;
  }

  @media (max-width: 768px) {
    .projects-grid {
      gap: 1rem;
    }

    .recent-projects-container {
      gap: 1rem;

      .top-row,
      .bottom-row {
        gap: 1rem;
      }
    }
  }
</style>

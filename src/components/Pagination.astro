---
import {
  faChevronLeft,
  faChevronRight,
} from "@fortawesome/free-solid-svg-icons";
import { FontAwesomeIcon } from "@fortawesome/react-fontawesome";

export interface Props {
  currentPage: number;
  totalPages: number;
  baseUrl?: string;
}

const { currentPage, totalPages, baseUrl = "/posts" } = Astro.props;

// Generate pagination links
const displayedPages = 5; // Number of page links to display
let startPage = Math.max(1, currentPage - Math.floor(displayedPages / 2));
let endPage = Math.min(totalPages, startPage + displayedPages - 1);

// Adjust if we're at the edges
if (endPage - startPage + 1 < displayedPages) {
  startPage = Math.max(1, endPage - displayedPages + 1);
}

// Create page URLs with proper formats for static builds
function getPageUrl(page: number) {
  if (page === 1) {
    return baseUrl;
  }
  return `${baseUrl}/${page}`;
}
---

{
  totalPages > 1 && (
    <nav class="pagination" aria-label="Pagination">
      <a
        href={currentPage > 1 ? getPageUrl(currentPage - 1) : "#"}
        class={`pagination-link prev ${currentPage <= 1 ? "disabled" : ""}`}
        aria-label="Previous page"
        aria-disabled={currentPage <= 1}
        tabindex={currentPage <= 1 ? -1 : 0}
      >
        <FontAwesomeIcon icon={faChevronLeft} className="chevron-icon" />
      </a>

      {startPage > 1 && (
        <>
          <a href={getPageUrl(1)} class="pagination-link">
            1
          </a>
          {startPage > 2 && <span class="pagination-ellipsis">...</span>}
        </>
      )}

      {Array.from(
        { length: endPage - startPage + 1 },
        (_, i) => startPage + i,
      ).map((page) => (
        <a
          href={getPageUrl(page)}
          class={`pagination-link ${currentPage === page ? "active" : ""}`}
          aria-current={currentPage === page ? "page" : undefined}
        >
          {page}
        </a>
      ))}

      {endPage < totalPages && (
        <>
          {endPage < totalPages - 1 && (
            <span class="pagination-ellipsis">...</span>
          )}
          <a href={getPageUrl(totalPages)} class="pagination-link">
            {totalPages}
          </a>
        </>
      )}

      <a
        href={currentPage < totalPages ? getPageUrl(currentPage + 1) : "#"}
        class={`pagination-link next ${currentPage >= totalPages ? "disabled" : ""}`}
        aria-label="Next page"
        aria-disabled={currentPage >= totalPages}
        tabindex={currentPage >= totalPages ? -1 : 0}
      >
        <FontAwesomeIcon icon={faChevronRight} className="chevron-icon" />
      </a>
    </nav>
  )
}

<style lang="scss">
  @use "../styles/global" as *;

  .pagination {
    display: flex;
    justify-content: center;
    align-items: center;
    margin: 2rem 0;
    gap: 0.3rem;
    flex-wrap: wrap;
  }

  .pagination-link {
    display: flex;
    align-items: center;
    justify-content: center;
    min-width: 2rem;
    height: 2rem;
    padding: 0 0.5rem;
    border-radius: 4px;
    text-decoration: none;
    color: $secondary;
    font-size: 0.9rem;
    background-color: rgba(255, 255, 255, 0.05);
    transition: all 0.2s ease;

    &:hover:not(.disabled, .active) {
      background-color: rgba(255, 255, 255, 0.1);
      transform: translateY(-1px);
    }

    &.active {
      background-color: rgba(255, 255, 255, 0.15);
      font-weight: 500;
      pointer-events: none;
    }

    &.disabled {
      opacity: 0.5;
      pointer-events: none;
    }

    &.prev,
    &.next {
      font-size: 0.8rem;
    }

    :global(.chevron-icon) {
      width: 0.55rem !important;
      height: 0.55rem !important;
      color: darken($secondary, 20%);
    }
  }

  .pagination-ellipsis {
    display: flex;
    align-items: center;
    justify-content: center;
    min-width: 2rem;
    height: 2rem;
    color: rgba(255, 255, 255, 0.6);
    font-size: 0.9rem;
  }
</style>

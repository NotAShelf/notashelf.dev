---
import Pagination from "@components/Pagination.astro";
import { faArchive } from "@fortawesome/free-solid-svg-icons";
import { FontAwesomeIcon } from "@fortawesome/react-fontawesome";
import BaseLayout from "@layouts/BaseLayout.astro";
import type { PostEntry } from "@lib/types";
import { getCollection } from "astro:content";

// Pagination settings
const postsPerPage = 10;
const currentPage = parseInt(Astro.url.searchParams.get("page") || "1");

// Get all archived posts and sort by date
const allPosts = await getCollection("posts");
const archivedPosts = allPosts
  .filter((post: PostEntry) => post.data.archived && !post.data.draft)
  .sort(
    (a: PostEntry, b: PostEntry) =>
      new Date(b.data.date).getTime() - new Date(a.data.date).getTime(),
  );

// Calculate pagination
const totalPosts = archivedPosts.length;
const totalPages = Math.ceil(totalPosts / postsPerPage);
const startIndex = (currentPage - 1) * postsPerPage;
const endIndex = startIndex + postsPerPage;
const posts = archivedPosts.slice(startIndex, endIndex);
---

<BaseLayout title="Archive" description="Archive of outdated blog posts">
  <div class="posts-header">
    <h1 class="page-title">Archive</h1>
    <a href="/posts" class="posts-link">
      <FontAwesomeIcon icon={faArchive} /> Back to Posts
    </a>
  </div>

  <p class="archive-description">
    Outdated posts that are kept for historical reference. The information in
    these posts may no longer be accurate or relevant.
  </p>

  {
    posts.length === 0 ? (
      <div class="empty-archive">
        <p>No archived posts yet.</p>
      </div>
    ) : (
      <ul class="post-list">
        {posts.map((post: PostEntry) => (
          <li class="post-dropdown-item">
            <a href={`/archive/${post.id}`} class="dropdown-link">
              <div class="post-content">
                <div class="post-header">
                  <h2 class="post-title">{post.data.title}</h2>
                  {post.data.keywords && post.data.keywords.length > 0 && (
                    <div class="post-tags">
                      {post.data.keywords.map((tag: string) => (
                        <span class="post-tag">{tag}</span>
                      ))}
                    </div>
                  )}
                </div>
                <time datetime={post.data.date.toISOString()} class="post-date">
                  {new Date(post.data.date).toLocaleDateString("en-US", {
                    year: "numeric",
                    month: "long",
                    day: "numeric",
                  })}
                </time>
                {post.data.description && (
                  <p class="post-description">{post.data.description}</p>
                )}
              </div>
            </a>
          </li>
        ))}
      </ul>
    )
  }

  {
    totalPages > 1 && (
      <Pagination
        currentPage={currentPage}
        totalPages={totalPages}
        baseUrl="/archive"
      />
    )
  }
</BaseLayout>

<style lang="scss">
  @use "sass:color";
  @use "../../styles/global" as *;

  .posts-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1.5rem;
  }

  .page-title {
    margin-bottom: 0;
  }

  .posts-link {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    font-size: 0.9rem;
    color: color.scale($secondary, $lightness: -20%);
    text-decoration: none;
    padding: 0.4rem 0.8rem;
    border-radius: 4px;
    transition: all 0.2s ease;

    &:hover {
      background-color: rgba(255, 255, 255, 0.05);
      color: $secondary;
    }

    :global(svg) {
      width: 0.9rem !important;
      height: 0.9rem !important;
    }
  }

  .archive-description {
    color: color.scale($secondary, $lightness: -20%);
    font-size: 0.9rem;
    font-style: italic;
    margin-bottom: 1.5rem;
  }

  .empty-archive {
    padding: 3rem 0;
    text-align: center;
    color: color.scale($secondary, $lightness: -20%);
  }

  .post-list {
    padding: 0;
    margin: 0;
    width: 100%;
    list-style: none;
  }

  .post-dropdown-item {
    background-color: color.scale($primary, $lightness: 6%);
    list-style: none;
    padding: 12px 16px;
    border: 1px solid color.scale($primary, $lightness: -1%);
    border-radius: 6px;
    margin: 12px 0;
    width: 100%;
    height: 140px;
    display: flex;
    overflow: hidden;
    transition:
      background-color 0.15s ease-out,
      transform 0.1s ease-out;

    &:hover {
      cursor: pointer;
      color: color.scale($secondary, $lightness: -4%);
      background-color: color.scale($primary, $lightness: 9%);
      transform: translateY(-1px);
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }
  }

  .dropdown-link {
    display: block;
    text-decoration: none;
    width: 100%;
    color: $secondary;

    &:visited {
      color: $secondary;
    }
  }

  .post-content {
    display: flex;
    flex-direction: column;
    width: 100%;
    height: 100%;
  }

  .post-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 4px;
    width: 100%;
  }

  .post-title {
    font-size: 1.2em;
    font-weight: bold;
    margin: 0;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    flex: 1;
  }

  .post-date {
    font-size: 0.75em;
    color: color.scale($secondary, $lightness: -20%);
    margin: 0 0 8px 0;
    display: block;
  }

  .post-description {
    font-size: 0.85em;
    color: color.scale($secondary, $lightness: -10%);
    margin: 0;
    line-height: 1.4;
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
    flex: 1;
  }

  .post-tags {
    display: flex;
    flex-wrap: wrap;
    gap: 6px;
    margin-left: 12px;
  }

  .post-tag {
    font-size: 0.7rem;
    background: rgba(255, 255, 255, 0.1);
    padding: 2px 8px;
    border-radius: 3px;
  }
</style>

---
import BaseLayout from "../layouts/BaseLayout.astro";
import { getCollection } from "astro:content";

// Get latest posts for featured section
const allPosts = await getCollection("posts");
const sortedPosts = allPosts
  .filter((post) => !post.data.draft)
  .sort(
    (a, b) => new Date(b.data.date).getTime() - new Date(a.data.date).getTime(),
  )
  .slice(0, 3);

// Calculate reading time and create properly typed objects
const featuredPosts = sortedPosts.map((post) => {
  const wordCount = post.body.split(/\s+/g).length;
  return {
    ...post,
    readingTime: Math.max(1, Math.ceil(wordCount / 200)),
  };
});

// Get random post for spotlight feature
const spotlightPost =
  featuredPosts.length > 0
    ? featuredPosts[
        Math.floor(Math.random() * Math.min(featuredPosts.length, 3))
      ]
    : null;
---

<BaseLayout
  title="NotAShelf"
  description="Personal website and blog of NotAShelf"
>
  <section id="hero" class="hero fade-in">
    <div class="hero-content">
      <img
        class="profile-picture"
        src="https://avatars.githubusercontent.com/u/62766066?v=4"
        alt="Profile Picture"
      />
      <h1 class="reveal-text">Howdy! Welcome to my collection of notes.</h1>
      <p class="intro">
        This is where I store my notes on various topics and processes that I
        find particularly difficult, obscure or otherwise interesting. They will
        be mostly on Linux, Nix, NixOS or System Administration. I <em>might</em
        > write on programming too but expect the former more often.
      </p>
      <div class="cta-buttons">
        <a href="/posts" class="cta-button primary">Blog Posts</a>
        <a href="/about" class="cta-button secondary">About Me</a>
      </div>
    </div>
    <div class="scroll-arrow">
      <a href="#latest-notes" aria-label="Scroll to latest notes">
        <i class="lni lni-chevron-down"></i>
      </a>
    </div>
  </section>

  {
    featuredPosts.length > 0 && (
      <section id="latest-notes" class="latest-notes fade-in">
        <h2 class="section-title">Latest Notes</h2>

        <div class="featured-content">
          {spotlightPost && (
            <a href={`/posts/${spotlightPost.slug}`} class="spotlight-post">
              <div class="spotlight-content">
                <h3>{spotlightPost.data.title}</h3>
                <div class="post-meta">
                  <time datetime={spotlightPost.data.date}>
                    {new Date(spotlightPost.data.date).toLocaleDateString(
                      "en-US",
                      {
                        year: "numeric",
                        month: "short",
                        day: "numeric",
                      },
                    )}
                  </time>
                  <span class="reading-time">
                    {spotlightPost.readingTime} min read
                  </span>
                </div>
                {spotlightPost.data.description && (
                  <p>{spotlightPost.data.description}</p>
                )}
                <span class="read-more">
                  Read article <i class="lni lni-arrow-right" />
                </span>
              </div>
            </a>
          )}

          <div class="posts-side">
            {featuredPosts
              .filter((post) => post.slug !== spotlightPost?.slug)
              .slice(0, 2)
              .map((post, index) => (
                <a
                  href={`/posts/${post.slug}`}
                  class={`side-post ${index === 0 ? "first" : "second"}`}
                >
                  <h3>{post.data.title}</h3>
                  <div class="post-meta">
                    <time datetime={post.data.date}>
                      {new Date(post.data.date).toLocaleDateString("en-US", {
                        year: "numeric",
                        month: "short",
                        day: "numeric",
                      })}
                    </time>
                    <span class="reading-time">
                      {post.readingTime} min read
                    </span>
                  </div>
                </a>
              ))}
          </div>
        </div>

        <div class="see-all">
          <a href="/posts" class="see-all-link">
            View all notes <i class="lni lni-arrow-right" />
          </a>
        </div>
      </section>
    )
  }
</BaseLayout>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    // Fade in elements
    const fadeElements = document.querySelectorAll(".fade-in");
    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            entry.target.classList.add("visible");
            observer.unobserve(entry.target);
          }
        });
      },
      { threshold: 0.1 },
    );

    fadeElements.forEach((el) => observer.observe(el));

    // Smooth scroll for anchor links
    document.querySelectorAll('a[href^="#"]').forEach((anchor) => {
      anchor.addEventListener("click", (e) => {
        e.preventDefault();
        const targetId = anchor.getAttribute("href");
        const targetElement = document.querySelector(targetId);

        if (targetElement) {
          targetElement.scrollIntoView({
            behavior: "smooth",
          });
        }
      });
    });

    // Pulse animation for scroll arrow
    const scrollArrow = document.querySelector(".scroll-arrow");
    if (scrollArrow) {
      scrollArrow.classList.add("animate");
    }
  });
</script>

<style lang="scss">
  @import "../styles/variables";
  @use "sass:color";

  // Animations
  .fade-in {
    opacity: 0;
    transform: translateY(10px);
    transition:
      opacity 0.6s ease-out,
      transform 0.6s ease-out;

    &.visible {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .reveal-text {
    position: relative;
    overflow: hidden;

    &::after {
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: color.scale($primary, $lightness: -2%);
      transform: translateX(-100%);
      animation: reveal 1.2s cubic-bezier(0.77, 0, 0.18, 1) forwards;
    }
  }

  @keyframes reveal {
    0% {
      transform: translateX(-100%);
    }
    50% {
      transform: translateX(0);
    }
    100% {
      transform: translateX(100%);
    }
  }

  @keyframes pulse {
    0% {
      transform: translateY(0);
      opacity: 0.8;
    }
    50% {
      transform: translateY(10px);
      opacity: 1;
    }
    100% {
      transform: translateY(0);
      opacity: 0.8;
    }
  }

  // Hero section
  .hero {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    min-height: calc(100vh - 60px); /* Adjust for navbar height */
    width: 100%;
    padding: 1.5rem 0 6rem;
    box-sizing: border-box;
    position: relative;
  }

  .hero-content {
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
    max-width: 65ch;
    width: 100%;
    position: relative;
  }

  h1 {
    margin: 1.25rem 0 0.75rem;
    font-size: 1.8rem;
    font-weight: 700;
    letter-spacing: -0.02em;
  }

  .profile-picture {
    width: 120px;
    height: 120px;
    border-radius: 50%;
    border: 3px solid color.scale($primary, $lightness: 15%);
    box-shadow: 0 6px 16px rgba(0, 0, 0, 0.2);
    transition:
      transform 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275),
      box-shadow 0.3s ease;

    &:hover {
      transform: scale(1.05) rotate(-2deg);
      box-shadow: 0 10px 24px rgba(0, 0, 0, 0.25);
    }
  }

  .intro {
    line-height: 1.6;
    margin: 0 auto 1.5rem;
    color: color.scale($secondary, $lightness: -10%);
    font-size: 1rem;
    padding: 0 1rem;
  }

  .cta-buttons {
    display: flex;
    gap: 1rem;
    margin: 0.5rem 0 1.5rem;
    justify-content: center;
  }

  .cta-button {
    padding: 0.6rem 1.2rem;
    border-radius: 4px;
    text-decoration: none;
    font-weight: 600;
    font-size: 0.95rem;
    transition: all 0.2s cubic-bezier(0.175, 0.885, 0.32, 1.275);
    position: relative;
    overflow: hidden;

    &::after {
      content: "";
      position: absolute;
      bottom: 0;
      left: 0;
      width: 100%;
      height: 0;
      background: rgba(255, 255, 255, 0.1);
      transition: height 0.2s ease;
      z-index: -1;
    }

    &:hover::after {
      height: 100%;
    }

    &.primary {
      background-color: color.scale($primary, $lightness: 10%);
      color: $secondary;

      &:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.15);
      }

      &:active {
        transform: translateY(0);
      }
    }

    &.secondary {
      background-color: rgba(255, 255, 255, 0.08);
      color: $secondary;
      border: 1px solid rgba(255, 255, 255, 0.1);

      &:hover {
        transform: translateY(-2px);
        background-color: rgba(255, 255, 255, 0.12);
      }

      &:active {
        transform: translateY(0);
      }
    }
  }

  .scroll-arrow {
    position: absolute;
    bottom: 50px;
    left: 0;
    right: 0;
    margin: 0 auto;
    width: 40px;
    height: 40px;
    opacity: 0.8;
    transition: opacity 0.3s ease;
    z-index: 10;
    display: flex;
    justify-content: center;
    align-items: center;
    text-align: center;

    &.animate {
      animation: pulse 2s infinite ease-in-out;
    }

    a {
      display: flex;
      justify-content: center;
      color: $secondary;
      text-decoration: none;
      transition: transform 0.3s ease;
      padding: 10px;
      width: 100%;
      height: 100%;

      &:hover {
        transform: translateY(5px);
      }
    }

    i {
      font-size: 2rem;
    }
  }

  // Latest notes section
  .latest-notes {
    margin: 2.5rem 0 3rem;
    width: 100%;
    padding: 0;
    scroll-margin-top: 80px;
    box-sizing: border-box;
  }

  .section-title {
    text-align: center;
    margin-bottom: 1.5rem;
    font-size: 1.5rem;
    position: relative;
    display: inline-block;
    left: 50%;
    transform: translateX(-50%);

    &::after {
      content: "";
      position: absolute;
      bottom: -8px;
      left: 0;
      width: 60%;
      height: 2px;
      background: linear-gradient(
        to right,
        rgba(255, 255, 255, 0.05),
        rgba(255, 255, 255, 0.2),
        rgba(255, 255, 255, 0.05)
      );
    }
  }

  .featured-content {
    display: grid;
    grid-template-columns: 1.5fr 1fr;
    gap: 1.25rem;
    margin-top: 1.5rem;
    width: 100%;
    box-sizing: border-box;
  }

  .spotlight-post {
    background: linear-gradient(
      135deg,
      color.scale($primary, $lightness: 6%),
      color.scale($primary, $lightness: 8%)
    );
    border-radius: 8px;
    padding: 1.25rem;
    text-decoration: none;
    color: $secondary;
    transition: all 0.3s ease;
    display: flex;
    flex-direction: column;
    height: 100%;
    position: relative;
    overflow: hidden;
    box-sizing: border-box;

    &::before {
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 5px;
      background: linear-gradient(
        to right,
        rgba(255, 255, 255, 0.1),
        rgba(255, 255, 255, 0.3),
        rgba(255, 255, 255, 0.1)
      );
      transform: translateY(-100%);
      transition: transform 0.3s ease;
    }

    &:hover {
      transform: translateY(-3px);
      box-shadow: 0 8px 16px rgba(0, 0, 0, 0.15);

      &::before {
        transform: translateY(0);
      }

      .read-more i {
        transform: translateX(4px);
      }
    }

    h3 {
      font-size: 1.3rem;
      margin: 0 0 0.8rem;
      line-height: 1.3;
    }

    .post-meta {
      display: flex;
      align-items: center;
      margin-bottom: 0.8rem;
      font-size: 0.8rem;

      time {
        color: color.scale($secondary, $lightness: -20%);
      }

      .reading-time {
        margin-left: 1rem;
        padding-left: 1rem;
        border-left: 1px solid rgba(255, 255, 255, 0.1);
        color: color.scale($secondary, $lightness: -20%);
      }
    }

    p {
      font-size: 0.9rem;
      line-height: 1.5;
      margin: 0 0 1.25rem;
      color: color.scale($secondary, $lightness: -10%);
    }

    .read-more {
      font-size: 0.85rem;
      font-weight: 600;
      display: flex;
      align-items: center;
      margin-top: auto;

      i {
        margin-left: 0.3rem;
        transition: transform 0.2s ease;
      }
    }
  }

  .posts-side {
    display: flex;
    flex-direction: column;
    gap: 0.8rem;
    height: 100%;
    width: 100%;
    box-sizing: border-box;
  }

  .side-post {
    background-color: color.scale($primary, $lightness: 6%);
    border-radius: 8px;
    padding: 1rem;
    text-decoration: none;
    color: $secondary;
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
    flex: 1;
    box-sizing: border-box;
    width: 100%;

    &::after {
      content: "";
      position: absolute;
      bottom: 0;
      right: 0;
      width: 20px;
      height: 20px;
      background: rgba(255, 255, 255, 0.05);
      border-radius: 50%;
      transform: translate(50%, 50%) scale(0);
      transition: transform 0.5s cubic-bezier(0.19, 1, 0.22, 1);
    }

    &:hover {
      transform: translateY(-2px) translateX(2px);
      background-color: color.scale($primary, $lightness: 8%);

      &::after {
        transform: translate(50%, 50%) scale(15);
      }
    }

    &.first {
      border-left: 3px solid rgba(255, 255, 255, 0.15);
    }

    &.second {
      border-left: 3px solid rgba(255, 255, 255, 0.08);
    }

    h3 {
      font-size: 1rem;
      margin: 0 0 0.5rem;
      line-height: 1.3;
    }

    .post-meta {
      display: flex;
      align-items: center;
      font-size: 0.75rem;

      time {
        color: color.scale($secondary, $lightness: -20%);
      }

      .reading-time {
        margin-left: 0.8rem;
        padding-left: 0.8rem;
        border-left: 1px solid rgba(255, 255, 255, 0.1);
        color: color.scale($secondary, $lightness: -20%);
      }
    }
  }

  .see-all {
    text-align: center;
    margin-top: 1.5rem;
  }

  .see-all-link {
    display: inline-flex;
    align-items: center;
    color: $secondary;
    text-decoration: none;
    font-size: 0.9rem;
    font-weight: 500;
    padding: 0.5rem 1rem;
    border-radius: 4px;
    background-color: rgba(255, 255, 255, 0.05);
    transition: all 0.2s ease;

    i {
      margin-left: 0.4rem;
      transition: transform 0.2s ease;
    }

    &:hover {
      background-color: rgba(255, 255, 255, 0.1);

      i {
        transform: translateX(3px);
      }
    }
  }

  // Responsive styles
  @media (max-width: 768px) {
    .hero {
      min-height: calc(100vh - 60px);

      h1 {
        font-size: 1.6rem;
      }
    }

    .profile-picture {
      width: 100px;
      height: 100px;
    }

    .cta-buttons {
      flex-direction: row;
      width: 100%;
      justify-content: center;
    }

    .featured-content {
      grid-template-columns: 1fr;
      gap: 1rem;
    }

    .side-post h3 {
      font-size: 0.95rem;
    }
  }

  @media (max-width: 480px) {
    .hero h1 {
      font-size: 1.4rem;
    }

    .cta-buttons {
      flex-direction: column;
      align-items: center;
      gap: 0.75rem;

      .cta-button {
        width: 80%;
        text-align: center;
      }
    }

    .scroll-arrow {
      bottom: 20px;
    }
  }
</style>

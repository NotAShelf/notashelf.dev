---
import FeaturedProjects from "@components/FeaturedProjects.astro";
import FontAwesome from "@components/FontAwesome.astro";
import PostSpotlight from "@components/PostSpotlight.astro";
import ResponsiveImage from "@components/ResponsiveImage.astro";
import BaseLayout from "@layouts/BaseLayout.astro";
import { getCollection } from "astro:content";

// Get latest posts for featured section
const allPosts = await getCollection("posts");
const sortedPosts = allPosts
  .filter((post) => !post.data.draft)
  .sort(
    (a, b) => new Date(b.data.date).getTime() - new Date(a.data.date).getTime(),
  )
  .slice(0, 6); // Get more posts to have options for randomization

// Calculate reading time and create properly typed objects
const featuredPosts = sortedPosts.map((post) => {
  const wordCount = post.body ? post.body.split(/\s+/g).length : 0;
  return {
    ...post,
    readingTime: Math.max(1, Math.ceil(wordCount / 200)),
  };
});

// Deterministic selection for server-side rendering
let spotlightPost = null;
let sidePosts: typeof featuredPosts = [];

if (featuredPosts.length >= 3) {
  // Only render PostSpotlight if we have at least 3 posts
  // -> 1 spotlight + 2 side posts
  spotlightPost = featuredPosts[0];
  sidePosts = featuredPosts.slice(1, 3);
}
---

<BaseLayout
  title="NotAShelf"
  description="Personal website and blog of NotAShelf"
>
  <section id="hero" class="hero fade-in">
    <div class="hero-content">
      <div class="profile-image-wrapper">
        <ResponsiveImage
          src="/images/avatar-120.webp"
          alt="Profile Picture"
          width={120}
          height={120}
          class="profile-picture"
          loading="lazy"
          decoding="async"
          sizes="(max-width: 480px) 100px, 120px"
          widths={[100, 120, 150, 180, 240]}
          quality={90}
        />
      </div>
      <h1 class="reveal-text">Howdy! Welcome to my personal website.</h1>
      <p class="intro">
        This is where I share my projects, ideas, thoughts and notes on topics
        that I find interesting, difficult , obscure or otherwise worth sharing.
        Most of my writings are on Linux, Nix, NixOS or System Administration. I
        also intend to write about other topics I find interesting, outside of
        programming and technology, such as history, philosophy, and
        mathematics. I hope you find something useful or interesting here!
      </p>
      <div class="cta-buttons">
        <a href="/posts" class="cta-button primary">Blog Posts</a>
        <a href="/about" class="cta-button secondary">About Me</a>
      </div>
    </div>
    <div class="scroll-arrow">
      <a href="#latest-notes" aria-label="Scroll to latest notes">
        <FontAwesome icon="chevron-down" size="2x" loadingStrategy="idle" />
      </a>
    </div>
  </section>

  {
    spotlightPost && sidePosts.length >= 2 && (
      <section id="latest-notes" class="latest-notes fade-in">
        <h2 class="section-title">Latest Notes</h2>

        <PostSpotlight spotlightPost={spotlightPost} sidePosts={sidePosts} />

        <div class="see-all">
          <a href="/posts" class="see-all-link">
            View all notes{" "}
            <FontAwesome
              icon="arrow-right"
              class="icon"
              loadingStrategy="visible"
            />
          </a>
        </div>
      </section>
    )
  }

  <FeaturedProjects mode="featured" title="Featured Projects" />
</BaseLayout>

<script>
  import "../scripts/page-utils.ts";
</script>

<style lang="scss">
  @use "../styles/global" as *;
  @use "sass:color";

  // Animations
  .fade-in {
    opacity: 0;
    transform: translateY(10px);
    transition:
      opacity 0.6s ease-out,
      transform 0.6s ease-out;

    &.visible {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .reveal-text {
    position: relative;
    overflow: hidden;

    &::after {
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: color.scale($primary, $lightness: -2%);
      transform: translateX(-100%);
      animation: reveal 1.2s cubic-bezier(0.77, 0, 0.18, 1) forwards;
    }
  }

  @keyframes reveal {
    0% {
      transform: translateX(-100%);
    }
    50% {
      transform: translateX(0);
    }
    100% {
      transform: translateX(100%);
    }
  }

  @keyframes pulse {
    0% {
      transform: translateY(0);
      opacity: 0.8;
    }
    50% {
      transform: translateY(10px);
      opacity: 1;
    }
    100% {
      transform: translateY(0);
      opacity: 0.8;
    }
  }

  // Hero section
  .hero {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    min-height: calc(100vh - 60px);
    width: 100%;
    padding: 1.5rem 0 6rem;
    box-sizing: border-box;
    position: relative;
  }

  .hero-content {
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
    max-width: 65ch;
    width: 100%;
    position: relative;
  }

  h1 {
    margin: 1.25rem 0 0.75rem;
    font-size: 1.8rem;
    font-weight: 700;
    letter-spacing: -0.02em;
  }

  .profile-image-wrapper {
    width: 120px;
    height: 120px;
    margin: 0 auto;
    position: relative;

    :global(img) {
      border-radius: 50%;
      border: 3px solid color.scale($primary, $lightness: 15%);
      box-shadow: 0 6px 16px rgba(0, 0, 0, 0.2);
      transition:
        transform 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275),
        box-shadow 0.3s ease;

      &:hover {
        transform: scale(1.05) rotate(-2deg);
        box-shadow: 0 10px 24px rgba(0, 0, 0, 0.25);
      }
    }
  }

  .profile-picture {
    width: 120px;
    height: 120px;
  }

  .intro {
    line-height: 1.6;
    margin: 0 auto 1.5rem;
    color: color.scale($secondary, $lightness: -10%);
    font-size: 1rem;
    padding: 0 1rem;
  }

  .cta-buttons {
    display: flex;
    gap: 1rem;
    margin: 0.5rem 0 1.5rem;
    justify-content: center;
  }

  .cta-button {
    @include rounded-border;
    padding: 0.6rem 1.2rem;
    text-decoration: none;
    font-weight: 600;
    font-size: 0.95rem;
    transition: all 0.2s cubic-bezier(0.175, 0.885, 0.32, 1.275);
    position: relative;
    overflow: hidden;
    &::after {
      content: "";
      position: absolute;
      bottom: 0;
      left: 0;
      width: 100%;
      height: 0;
      background: $border-light;
      transition: height 0.2s ease;
      z-index: -1;
    }

    &:hover::after {
      height: 100%;
    }

    &.primary {
      background-color: color.scale($primary, $lightness: 10%);
      color: $secondary;

      &:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.15);
      }

      &:active {
        transform: translateY(0);
      }
    }

    &.secondary {
      background-color: $button-bg;
      color: $secondary;
      border: 1px solid $border-light;

      &:hover {
        transform: translateY(-2px);
        background-color: $button-bg-hover;
      }

      &:active {
        transform: translateY(0);
      }
    }
  }

  .scroll-arrow {
    position: absolute;
    bottom: 50px;
    left: 0;
    right: 0;
    margin: 0 auto;
    width: 40px;
    height: 40px;
    opacity: 0.8;
    transition: opacity 0.3s ease;
    z-index: 10;
    display: flex;
    justify-content: center;
    align-items: center;
    text-align: center;

    &.animate {
      animation: pulse 2s infinite ease-in-out;
    }

    a {
      display: flex;
      justify-content: center;
      color: $secondary;
      text-decoration: none;
      transition: transform 0.3s ease;
      padding: 10px;
      width: 100%;
      height: 100%;

      &:hover {
        transform: translateY(5px);
      }
    }
  }

  // Latest notes section
  .latest-notes {
    margin: 2.5rem 0 3rem;
    width: 100%;
    padding: 0;
    scroll-margin-top: 80px;
    box-sizing: border-box;
  }

  .section-title {
    text-align: center;
    margin-bottom: 1.5rem;
    font-size: 1.5rem;
    position: relative;
    display: inline-block;
    left: 50%;
    transform: translateX(-50%);

    &::after {
      content: "";
      position: absolute;
      bottom: -8px;
      left: 0;
      width: 60%;
      height: 2px;
      background: linear-gradient(
        to right,
        $button-bg,
        $text-subtle,
        $button-bg
      );
    }
  }

  .see-all {
    text-align: center;
    margin-top: 1.5rem;
  }

  .see-all-link {
    @include button-base;
    display: inline-flex;
    align-items: center;
    font-size: 0.9rem;
    font-weight: 500;
    padding: 0.5rem 1rem;

    svg {
      margin-left: 0.4rem;
      @include smooth-transition(transform);
    }

    &:hover {
      background-color: $border-light;

      svg {
        transform: translateX(3px);
      }
    }
  }

  // FontAwesome arrows
  .icon {
    font-size: 1.1em;
    width: 0.9em;
    height: 0.9em;
  }

  // Responsive styles
  @media (max-width: 768px) {
    .hero {
      min-height: calc(100vh - 60px);

      h1 {
        font-size: 1.6rem;
      }
    }

    .profile-picture {
      width: 100px;
      height: 100px;
    }

    .cta-buttons {
      flex-direction: row;
      width: 100%;
      justify-content: center;
      flex-wrap: wrap;
    }
  }

  @media (max-width: 480px) {
    .hero h1 {
      font-size: 1.4rem;
    }

    .cta-buttons {
      flex-direction: column;
      align-items: center;
      gap: 0.75rem;

      .cta-button {
        width: 80%;
        text-align: center;
      }
    }

    .scroll-arrow {
      bottom: 20px;
    }
  }
</style>

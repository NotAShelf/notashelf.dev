---
import type { ProjectEntry } from "@lib/types";
import { Icon } from "astro-icon/components";

interface Props {
  project: ProjectEntry;
  maxTagsToShow?: number;
  "data-project-id"?: string;
}

const { project, maxTagsToShow = 3, ...rest } = Astro.props;

// Format project date
const formatDate = (date?: Date) => {
  if (!date) return "Date Unknown";
  return date.toLocaleDateString("en-US", { year: "numeric", month: "short" });
};
---

<div class={`project-card ${!project.data.active ? "inactive" : ""}`} {...rest}>
  <div class="project-content">
    <h3 class="project-title">
      <a
        href={project.data.sourceUrl}
        target="_blank"
        rel="noopener noreferrer"
      >
        {project.data.title}
      </a>
    </h3>

    <div class="project-meta">
      <span class="project-date">
        {formatDate(project.data.startDate)}
      </span>
      <span
        class={`status-badge ${project.data.active ? "active" : "inactive"}`}
      >
        {project.data.active ? "Active" : "Inactive"}
      </span>
    </div>

    {
      project.data.description && (
        <div class="description-container">
          <p class="project-description">{project.data.description}</p>
        </div>
      )
    }

    <div class="project-tags">
      {
        project.data.tags
          .slice(0, maxTagsToShow)
          .map((tag) => <span class="project-tag">{tag}</span>)
      }
      {
        project.data.tags.length > maxTagsToShow && (
          <span class="project-tag more">
            +{project.data.tags.length - maxTagsToShow}
          </span>
        )
      }
    </div>

    <a
      href={project.data.sourceUrl}
      class="view-project"
      target="_blank"
      rel="noopener noreferrer"
    >
      View Project{" "}
      <Icon name="arrow-right" class="arrow-icon" title="Arrow Right" />
    </a>
  </div>
</div>

<style lang="scss">
  @use "sass:color";
  @use "../styles/global" as *;

  .project-card {
    background-color: color.scale($primary, $lightness: 6%);
    border-radius: 8px;
    overflow: hidden;
    transition: all 0.3s ease;
    border: 1px solid color.scale($primary, $lightness: -1%);
    height: 100%;
    display: flex;
    flex-direction: column;
    width: 100%;

    &:hover {
      transform: translateY(-4px);
      background-color: color.scale($primary, $lightness: 9%);
      box-shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.1);
    }

    &.inactive {
      opacity: 0.7;

      &:hover {
        opacity: 0.9;
      }
    }
  }

  .project-content {
    padding: 1.25rem;
    display: flex;
    flex-direction: column;
    height: 100%;
  }

  .project-title {
    font-size: 1.1rem;
    margin-bottom: 0.5rem;
    line-height: 1.4;

    a {
      color: $secondary;
      text-decoration: none;
      transition: color 0.2s ease;

      &:hover {
        color: color.scale($primary, $lightness: 40%);
      }
    }
  }

  .project-meta {
    display: flex;
    align-items: center;
    margin-bottom: 0.75rem;
    font-size: 0.8rem;
    gap: 0.75rem;
  }

  .project-date {
    color: color.scale($secondary, $lightness: -15%);
  }

  .status-badge {
    @include rounded-border;
    padding: 0.25rem 0.5rem;
    font-size: 0.7rem;
    font-weight: 500;

    &.active {
      background-color: color.scale($primary, $lightness: 10%);
      color: $secondary;
    }

    &.inactive {
      background-color: color.scale($primary, $lightness: -2%);
      color: color.scale($secondary, $lightness: -15%);
    }
  }

  .description-container {
    flex-grow: 1;
    display: flex;
    flex-direction: column;
  }

  .project-description {
    margin-bottom: 0.75rem;
    font-size: 0.9rem;
    color: color.scale($secondary, $lightness: -8%);
    line-height: 1.5;
    overflow: hidden;
    text-overflow: ellipsis;
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
  }

  .project-tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    margin-bottom: 0.75rem;
  }

  .project-tag {
    @include rounded-border;
    background-color: color.scale($primary, $lightness: 4%);
    color: color.scale($secondary, $lightness: -5%);
    padding: 0.2rem 0.5rem;
    font-size: 0.7rem;

    &.more {
      background-color: color.scale($primary, $lightness: 2%);
      font-size: 0.65rem;
    }
  }

  .view-project {
    @include interactive-link;
    margin-top: auto;
    font-weight: 600;
    font-size: 0.85rem;
    align-self: flex-start;
    display: inline-flex;
    align-items: center;
    gap: 0.3rem;

    &:hover {
      color: color.scale($secondary, $lightness: 20%);

      .arrow-icon {
        transform: translateX(4px);
      }
    }

    .arrow-icon {
      @include smooth-transition(transform);
    }
  }

  :global(.arrow-icon) {
    font-size: 1.1em;
    width: 0.9em;
    height: 0.9em;
  }
</style>
